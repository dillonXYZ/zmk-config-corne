/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        homerow_mods: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <125>;
        };
    };

    combos {
        compatible = "zmk,combos";

        alfred {
            bindings = <&kp LG(SPACE)>;
            key-positions = <38 39>;
            layers = <0>;
        };

        flow_launcher {
            bindings = <&kp LA(SPACE)>;
            key-positions = <38 39>;
            layers = <1>;
        };
    };

    macros {
        macos_fullscreen: macos_fullscreen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GLOBE &kp F>;
            label = "MACOS_FULLSCREEN";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mac {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q                       &kp W                  &kp E                     &kp R                 &kp T                               &kp Y                          &kp U                 &kp I                      &kp O                          &kp P                                &trans
&trans  &homerow_mods LEFT_SHIFT A  &homerow_mods LCTRL S  &homerow_mods LEFT_ALT D  &homerow_mods LGUI F  &homerow_mods LS(LC(LA(LGUI))) G    &homerow_mods LS(LA(LCTRL)) H  &homerow_mods RGUI J  &homerow_mods RIGHT_ALT K  &homerow_mods RIGHT_CONTROL L  &homerow_mods RIGHT_SHIFT SEMICOLON  &trans
&trans  &kp Z                       &kp X                  &kp C                     &kp V                 &kp B                               &kp N                          &kp M                 &kp COMMA                  &kp DOT                        &kp FSLH                             &trans
                                                           &kp BACKSPACE             &mo 3                 &kp SPACE                           &kp RET                        &mo 4                 &kp ESCAPE
            >;

            label = "mac";
        };

        windows {
            bindings = <
&trans  &trans  &trans                &trans  &trans                        &trans    &trans  &trans                         &trans  &trans                &trans  &trans
&trans  &trans  &homerow_mods LGUI S  &trans  &homerow_mods LEFT_CONTROL F  &trans    &trans  &homerow_mods RIGHT_CONTROL J  &trans  &homerow_mods RGUI L  &trans  &trans
&trans  &trans  &trans                &trans  &trans                        &trans    &trans  &trans                         &trans  &trans                &trans  &trans
                                      &trans  &trans                        &trans    &trans  &trans                         &trans
            >;

            label = "windows";
        };

        gaming {
            bindings = <
&trans  &kp TAB    &kp Q  &kp W   &kp E   &kp R     &trans  &trans                 &trans  &trans                &trans  &trans
&trans  &kp LSHFT  &kp A  &kp S   &kp D   &kp F     &trans  &homerow_mods LCTRL J  &trans  &homerow_mods LGUI L  &trans  &trans
&trans  &kp LCTRL  &kp Z  &kp X   &kp C   &kp V     &trans  &trans                 &trans  &trans                &trans  &trans
                          &trans  &trans  &trans    &trans  &trans                 &trans
            >;

            label = "gaming";
        };

        num_symbol {
            bindings = <
&trans  &kp EXCLAMATION                  &kp AT_SIGN   &kp HASH   &kp LEFT_BRACE        &kp RIGHT_BRACE          &kp APOSTROPHE  &kp N7  &kp N8  &kp N9  &kp PLUS   &trans
&trans  &homerow_mods LEFT_SHIFT DOLLAR  &kp PERCENT   &kp CARET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp BSLH        &kp N4  &kp N5  &kp N6  &kp EQUAL  &trans
&trans  &kp AMPERSAND                    &kp ASTERISK  &kp GRAVE  &kp LBKT              &kp RBKT                 &kp N0          &kp N1  &kp N2  &kp N3  &kp MINUS  &trans
                                                       &trans     &trans                &trans                   &trans          &trans  &trans
            >;

            label = "num";
        };

        arrow_func {
            bindings = <
&trans  &trans        &kp F7  &kp F8      &kp F9  &kp F10    &trans                  &kp PG_DN               &kp PG_UP             &trans                   &trans  &trans
&trans  &kp CAPSLOCK  &kp F4  &kp F5      &kp F6  &kp F11    &kp LEFT                &kp DOWN                &kp UP                &kp RIGHT                &trans  &trans
&trans  &trans        &kp F1  &kp F2      &kp F3  &kp F12    &kp LA(LC(LEFT_ARROW))  &kp LA(LC(DOWN_ARROW))  &kp LA(LC(UP_ARROW))  &kp LA(LC(RIGHT_ARROW))  &trans  &trans
                              &kp DELETE  &trans  &kp TAB    &trans                  &trans                  &trans
            >;

            label = "arrow";
        };

        config_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4    &none       &kp C_PREVIOUS    &kp C_PLAY_PAUSE   &kp C_NEXT         &none                 &none
&none  &none         &none         &none         &bt BT_DISC 3  &out OUT_TOG    &bt BT_CLR  &none             &kp LS(LA(RC(N)))  &kp C_VOL_UP       &kp C_BRIGHTNESS_INC  &none
&none  &to 0         &to 1         &to 2         &none          &none           &none       &kp LC(UP_ARROW)  &kp LS(LA(RC(M)))  &kp C_VOLUME_DOWN  &kp C_BRIGHTNESS_DEC  &none
                                   &trans        &trans         &trans          &trans      &trans            &trans
            >;

            label = "config";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        conifg_layer {
            if-layers = <3 4>;
            then-layer = <5>;
        };
    };
};
